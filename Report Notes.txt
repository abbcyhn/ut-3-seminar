ARTICLES:
    [1]     Dask Official Site
            https://docs.dask.org/en/stable/

    [2]     Dask: A Scalable Solution For Parallel Computing    
            https://towardsdatascience.com/dask-a-scalable-solution-for-parallel-computing-d1d962f227f6

    [3]     Dask: From Scratch to Scalable Analytics in Python
            https://medium.com/mlearning-ai/dask-from-scratch-to-scalable-analytics-in-python-e2139a6295e6

    [4]     Scaling Pandas: Comparing Dask, Ray, Modin, Vaex, and RAPIDS
            https://www.datarevenue.com/en-blog/pandas-vs-dask-vs-vaex-vs-modin-vs-rapids-vs-ray
    
    [5]     Fail Case Explanation
            http://matthewrocklin.com/slides/images/fail-case.gif
---------------------------------------------------------------------------------------------------------------------------------------

TUTORIALS:
    [1]     Dask Distributed Tutorial for Scaling Python Code Across Multiple Cores and Multiple Machines
            https://www.youtube.com/watch?v=v7famjsXdUY

    [2]     Pandas Limitations - Pandas vs Dask vs PySpark - DataMites Courses
            https://www.youtube.com/watch?v=YLg4vuIADnQ

    [3]     Scaling Pandas Using Dask: How to Avoid All My Mistakes | Krishan Bhasin | Dask Summit 2021
            https://www.youtube.com/watch?v=CVL8sTXT714

    [4]     Parallel and Distributed Computing in Python with Dask | SciPy 2020 | Bourbeau, McCarty, Pothina
            https://www.youtube.com/watch?v=EybGGLbLipI
    
    [5]     Dask Performance Reports in 3 Minutes
            https://www.youtube.com/watch?v=nTMGbkS761Q&ab_channel=Dask

    [6]     Dask Out of core NumPy:Pandas through Task Scheduling
            https://www.youtube.com/watch?v=1kkFZ4P-XHg&ab_channel=Enthought
    
    [7]     Pandas Alternatives Benchmarked - Dask vs Ray vs Modin vs Vaex
            https://www.youtube.com/watch?v=LEhMQhCv3Kg&ab_channel=MedallionDataScience
---------------------------------------------------------------------------------------------------------------------------------------

REFERENCES:
    [1]     A Performance Comparison of Dask and Apache Spark for Data-Intensive Neuroimaging Pipelines 
            https://ieeexplore.ieee.org/abstract/document/8943502

    [2]     Runtime vs Scheduler: Analyzing Daskâ€™s Overheads
            https://ieeexplore.ieee.org/abstract/document/9308114

    [3]     Comparative Evaluation of Big-Data Systems on Scientific Image Analytics Workloads
            https://arxiv.org/abs/1612.02485

    [4]     Performance Evaluation of Python Based Data Analytics Frameworks in Summit: Early Experiences
            https://link.springer.com/chapter/10.1007/978-3-030-63393-6_24

    [5]     CARS: A Photogrammetry Pipeline Using Dask Graphs to Construct A Global 3D Model
            https://ieeexplore.ieee.org/abstract/document/9324020

    [6]     Task-parallel Analysis of Molecular Dynamics Trajectories
            https://dl.acm.org/doi/abs/10.1145/3225058.3225128

    [7]     Efficient MPI-based Communication for GPU-Accelerated Dask Applications
            https://ieeexplore.ieee.org/abstract/document/9499534

    [8]     NumS: Scalable Array Programming for the Cloud
            https://arxiv.org/abs/2206.14276

    [9]     Dask & Numba: Simple libraries for optimizing scientific python code
            https://ieeexplore.ieee.org/abstract/document/7840867

    [10]    Training machine learning models faster with Dask
            https://conference.scipy.org/proceedings/scipy2021/pdfs/scott_sievert.pdf
        
    [11]    Dask: Parallel Computation with Blocked algorithms and Task Scheduling
            https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.825.5314&rep=rep1&type=pdf

    [12]    Better and faster hyperparameter optimization with Dask
            https://pdfs.semanticscholar.org/2d79/dc969f96a227fde1e3ddbeef9049e394ac90.pdf

    [13]    Dask & Numba: Simple libraries for optimizing scientific python code
            https://ieeexplore.ieee.org/abstract/document/7840867

    [14]    Python for Scientific Computing
            https://ieeexplore.ieee.org/document/4160250

    [15]	Efficient MPI-based Communication for GPU-Accelerated Dask Applications
            https://www.researchgate.net/publication/348739745_Efficient_MPI-based_Communication_for_GPU-Accelerated_Dask_Applications
    
    [16]    Performance Evaluation of Apache Spark Vs MPI: A Practical Case Study on Twitter Sentiment Analysis 
            https://thescipub.com/pdf/10.3844/jcssp.2017.781.794
    
    [17]    A comprehensive performance analysis of Apache Hadoop and Apache Spark forlarge scale data sets using HiBench
            https://journalofbigdata.springeropen.com/articles/10.1186/s40537-020-00388-5